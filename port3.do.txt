These are the steps taken to port DocOnce to Python 2/3.

!bc
sudo pip install future

cd lib/doconce
futurize --stage1 -w *.py
cd ../../bin
futurize --stage1 -w doconce
cd ..
futurize --stage1 -w setup.py

python setup.py install --prefix=$HOME/doconce3
!ec
Correct errors in print statements inside text that is to be run with `exec`
(two places in `latex.py`, one place in `html.py`).

!bc
# Test Py2
python setup.py install --prefix=$HOME/doconce3

export PATH=$HOME/doconce3/bin:$PATH
export PYTHONPATH=$HOME/doconce3/lib/python2.7/site-packages:$PYTHONPATH
!ec
Run `python2 test.verify` in `test`.

Then,

!bc
cd lib/doconce
futurize --stage2 --all-imports -w *.py
cd ../../bin
futurize --stage2 --all-imports -w doconce
cd ..
futurize --stage2 --all-imports -w setup.py

sudo apt-get install python3-pip

export PYTHONPATH=$HOME/doconce3/lib/python3.4/site-packages:$PYTHONPATH
!ec
Modify `doconce.py` with the `\u` trick (see below) and copy `setup.py`
from the `py3` branch.

Now, the code should work with Python 2 and 3.

Recall to reset `PATH` and `PYTHONPATH` when returning to the Python 2
version! Otherwise, very strange error messages with strings appear.

=== Comments ===

The first attempt stalled because of Python 2 problems with `\u` in
strings. Here is a solution:

 * Replace `\u` in `latex.py` and `misc.py` by `\XUX`.
 * Let `doconce.py` make a substitution for `\XUX` to `\u`.

It should work, but latex code inside doconce looks ugly...

An alternative is to let `setup.py` first substitute

!bc
filestr = re.sub(r'(^|[^\\])\\u', r'\g<1>\XUX', filestr, flags=re.MULTILINE)
# or doconce subst command
!ec
in `latex.py` and `misc.py`. Then run `setup`, and afterwards substitute
`\XUX` back to `\u`.
The `doconce.py` code must at the very end do a corresponding inverse
substitute in the output file, probably after it is written
(see `Python 2 \u trick`).

Solution is here in `py3` branch:

 * `setup.py`
 * search for `# Python 2 trick` in `doconce.py`

Keep that branch while making a new `py23`. Now `py3` is destroyed because
of an error when substituting back in `.py` files.
